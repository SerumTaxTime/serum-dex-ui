{"version":3,"sources":["assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","utils/transactionsApi.tsx","components/UserInfoTable/TradeExporter.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","includes","split","length","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","signTransaction","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signAllTransactions","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","then","catch","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","TransactionsApi","options","request","method","headers","body","ExportButton","TradeExporter","transactionData","setTransactionData","getTransactionData","filename","exportable","marginTop","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","LinkOutlined","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","component","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","connect","UserOutlined","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","open","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","borderBottom","Item","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","className","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58fa59ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value && value.toString().includes('.'))\n    return value.toString().split('.')[1].length || 0;\n  if (!isNaN(value) && Math.floor(value) !== value && value.toString().includes('e'))\n    return parseInt(value.toString().split(('e-'))[1] || \"0\");\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      localStorage.removeItem('feeDiscountKey')\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n      localStorage.removeItem('feeDiscountKey')\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: Wallet;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: Wallet;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\nimport { sleep } from './utils';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class TransactionsApi {\n  static URL: string = 'https://www.serumtaxtime.com/';\n\n  static async request(path: string, options: any) {\n    try {\n      const response = await fetch(this.URL + path, options);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson;\n      }\n    } catch (err) {\n      console.log(`Error fetching from transactions api ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getTransactionData(\n    publicKeyStr: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return TransactionsApi.request(`transactions_api`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n      },\n      body: `owner_pubkey=${publicKeyStr}`,\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { CSVLink } from 'react-csv';\nimport styled from 'styled-components';\nimport { Button, Row, Col, Typography } from 'antd';\nimport DataTable from '../layout/DataTable';\nimport TransactionsApi from '../../utils/transactionsApi';\nimport { useWallet } from '../../utils/wallet';\n\nconst ExportButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n  text-decoration: none;\n`;\n\nexport default function TradeExporter() {\n  const [transactionData, setTransactionData] = useState({});\n  const { wallet, connected } = useWallet();\n\n  useEffect(() => {\n    (async () => {\n      // if (connected) {\n      const data = await TransactionsApi.getTransactionData(\n        wallet.publicKey.toBase58(),\n      );\n      setTransactionData(data);\n      // }\n    })();\n  }, [wallet, connected]);\n\n  useEffect(() => {}, []);\n\n  const columns = [\n    {\n      title: 'Date and Time',\n      dataIndex: 'date_and_time',\n      key: 'date_and_time',\n    },\n    {\n      title: `Sent Quantity`,\n      dataIndex: 'sent_quantity',\n      key: 'sent_quantity',\n    },\n    {\n      title: `Sent Currency`,\n      dataIndex: 'sent_currency',\n      key: 'sent_currency',\n    },\n    {\n      title: `Received Quantity`,\n      dataIndex: 'received_quantity',\n      key: 'received_quantity',\n    },\n    {\n      title: `Received Currency`,\n      dataIndex: 'received_currency',\n      key: 'received_currency',\n    },\n    {\n      title: `Fee`,\n      dataIndex: 'fee',\n      key: 'fee',\n    },\n    {\n      title: `Fee Currency`,\n      dataIndex: 'fee_currency',\n      key: 'fee_currency',\n    },\n  ];\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <div style={{ marginBottom: 5 }}>\n            {transactionData.data && (\n              <ExportButton>\n                <CSVLink\n                  data={transactionData.data}\n                  filename={`serum_trades_${wallet.publicKey.toBase58()}`}\n                  headers={transactionData.columns}\n                >\n                  Download CSV\n                </CSVLink>\n              </ExportButton>\n            )}\n          </div>\n          <DataTable\n            dataSource={transactionData.data}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel={connected ? 'No transactions' : 'Connect Wallet'}\n            exportable\n          />\n        </Col>\n      </Row>\n\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Tax formating help can be found{' '}\n            <a href=\"https://help.taxbit.com/hc/en-us/articles/360047756913-Importing-transactions-manually-with-a-CSV-file\">\n              here\n            </a>\n          </Typography>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport TradeExporter from './TradeExporter';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n        <TabPane tab=\"Trade Exporter\" key=\"tradeExporter\">\n          <TradeExporter />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n}: {\n  title?: undefined | any;\n  address: string;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount, useFeeDiscountKeys, useLocallyStoredFeeDiscountKey,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !wallet.publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(\n          sendConnection,\n          wallet.publicKey,\n        );\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, wallet.publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport Link from './Link';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new USDC markets\n      </Title>\n      <Typography>\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n          }\n        >\n          Native USDC\n        </Link>{' '}\n        has arrived on Solana! See{' '}\n        <Link\n          external\n          to={\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\n          }\n        >\n          Circle's announcement\n        </Link>{' '}\n        for more information.\n      </Typography>\n      <br />\n      <Typography>\n        Serum is transitioning from the previous{' '}\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\n          }\n        >\n          Wrapped USDC\n        </Link>\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\n        directly on{' '}\n        <Link external to={'https://sollet.io'}>\n          sollet.io\n        </Link>\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\n        <Link external to={'https://ftx.com'}>\n          FTX\n        </Link>\n        .\n      </Typography>\n      <br />\n      <Typography>\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\n        over to the new USDC markets, please cancel your orders and settle your\n        funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button, Popover } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#2abdd2' }}\n      >\n        <UserOutlined />\n        {!connected ? 'Connect wallet' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport Wallet from '@project-serum/sol-wallet-adapter';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet: Wallet;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const [marketList] = useAllMarkets();\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://explorer.solana.com/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://swap.projectserum.com',\n};\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress))) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <WalletProvider>\n            <PreferencesProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </PreferencesProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}